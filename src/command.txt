npm install
npm install -g node-gyp
npm rebuild
npm cache clean --force
rm -rf node_modules package-lock.json
npm install
npm install -g @angular/cli

ng update

ng serve

ng add @angular/material

ng g m shared

ng g c shared/components/PageHeader --no-standalone

ng g c shared/components/PageFooter --no-standalone

ng g c shared/components/PageSideNav --no-standalone

ng g c shared/components/PageNotFound --no-standalone

ng g s shared/services/api  

ng g m auth

ng g c auth/Register --no-standalone

ng g c auth/login --no-standalone

npm install @auth0/angular-jwt

ng g m books

ng g m users
 
ng g c books/booksStore --no-standalone

ng g c users/userOrders --no-standalone

ng g c books/returnBook --no-standalone

ng g c users/profile --no-standalone

ng g c books/maintenance --no-standalone

ng g c shared/components/pageTable --no-standalone

ng g c users/approvalRequests --no-standalone

ng g c users/allOrders --no-standalone

ng g c users/ViewUsers --no-standalone





Library-Management-System-SinglePage/


Library-Management-System-SinglePage/
│
├── src/
│   ├── API/
│   │   └── LMS_API/
│   │       └── LMS_API.csproj
│   └── Front-end-web/
│       └── src/
│           ├── main.ts
│           └── index.html
│
└── Dockerfile


docker build -t library-management-system .

docker build -t library -f D:\Github\ASP-.NET-B09-Practice\docs\DockerFile .

docker run -p 80:80 -p 7030:7030 library
docker build -t library -f D:\Github\ASP-.NET-B09-Practice\docs\DockerFile .
docker run -p 80:80 -p 7030:7030 library

netstat -aon | findstr :7030
lsof -i :7030
netstat -plnt | grep 7030
kill -9 <PID>
docker run -it library /bin/sh
ps aux | grep apache
RUN echo "ServerName localhost" >> /etc/apache2/apache2.conf



ng build --prod
ng b --output-path UIPublish --base-href /library/








